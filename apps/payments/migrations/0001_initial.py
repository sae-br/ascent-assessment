# Generated by Django 5.2.4 on 2025-09-18 15:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assessments', '0002_assessmentparticipant_last_invited_at'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Case-insensitive; will be uppercased on save.', max_length=64, unique=True)),
                ('percent_off', models.DecimalField(blank=True, decimal_places=2, help_text='0â€“100.00', max_digits=5, null=True)),
                ('amount_off', models.IntegerField(blank=True, help_text='Fixed discount in MINOR units (e.g., cents).', null=True)),
                ('currency', models.CharField(blank=True, help_text="Required if using amount_off. Example: 'cad'.", max_length=10)),
                ('active', models.BooleanField(default=True)),
                ('starts_at', models.DateTimeField(blank=True, null=True)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('max_redemptions', models.PositiveIntegerField(blank=True, help_text='Global cap across all users. Leave blank for unlimited.', null=True)),
                ('per_user_limit', models.PositiveIntegerField(default=1, help_text='How many times a single user can redeem.')),
                ('min_subtotal', models.IntegerField(blank=True, help_text='Minimum subtotal (minor units) required to apply.', null=True)),
                ('first_purchase_only', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_intent_id', models.CharField(max_length=64)),
                ('amount_before', models.IntegerField(help_text='Minor units')),
                ('discount_applied', models.IntegerField(help_text='Minor units')),
                ('amount_after', models.IntegerField(help_text='Minor units')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocode_redemptions', to='assessments.assessment')),
                ('promocode', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='payments.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocode_redemptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['payment_intent_id'], name='payments_re_payment_8b2270_idx'), models.Index(fields=['user', 'promocode'], name='payments_re_user_id_417223_idx')],
                'unique_together': {('promocode', 'user', 'assessment')},
            },
        ),
    ]
